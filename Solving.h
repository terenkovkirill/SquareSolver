/*!
\"C:\Users\KirillT\Desktop\SquareSolver\Head_Solving1.h"
\brief Çàãîëîâî÷íûé ôàéë ñ îïèñàíèåì êëàññîâ

Äàííûé ôàéë ñîäåðæèò â ñåáå îïðåäåëåíèÿ îñíîâíûõ
êëàññîâ, èñïîëüçóåìûõ â äåìîíñòðàöèîííîé ïðîãðàììå
*/


#ifndef SOLVING1_H
#define SOLVING1_H
#include <stdio.h>

const double Eps = 0.0001;  ///<Êîíñòàíòà äëÿ ñðàâíåíèÿ ÷èñåë òèïà double


/// Íàáîð âîçìîæíûõ îòâåòîâ ïðè ðåøåíèè êâàäðàòíîãî óðàâíåíèÿ ax**2 + bx + c

enum Direct {
    NO_ROOTS = 0,       ///< Óêàçûâàåò, ÷òî ó äàííîãî êâàäðàòíîãî óðàâíåíèÿ íåò ðåøåíèé
    ONE_ROOT = 1,       ///< Óêàçûâàåò, ÷òî ó êâàäðàòíîãî óðàâíåíèÿ îäíî ðåøåíèå
    TWO_ROOTS = 2,      ///< Óêàçûâàåò, ÷òî ó êâàäðàòíîãî óðàâíåíèÿ äâà ðåøåíèÿ
    INFINITY_ROOTS = 3  ///< Óêàçûâàåò, ÷òî ó êâàäðàòíîãî óðàâíåíèÿ áåñêîíå÷íîå êîëè÷åñòâî ðåøåíèé
};



///@brief: ôóíêöèÿ î÷èùàåò áóôåð

///@return: 0 ïðè ñ÷èòûâàíèè íåïðîáåëüíîãî ýëåìåíòà
///@return: 1 ïðè îòñóòñòâèè íåïðîáåëüíûõ ýëåìåíòîâ

///@details: ôóíêöèÿ ïîñëåäîâàòåëüíî ñ÷èòûâàåò ýëåìåíòû ñ êëàâèàòóðû \
             äî ìîìåíòà íàõîæäåíèÿ ñèìâîëà '\n'

int  CleanAndCheckBuffer();




///@brief: ôóíêöèÿ áåçîïàñíîãî ââîäà äàííûõ

///@param: adrs_a - àäðåñ ïåðâîãî êîýôôèöèåíòà êâàäðàòíîãî óðàâíåíèÿ ax**2 + bx + c
///@param: adrs_b - àäðåñ âòîðîãî êîýôôèöèåíòà êâàäðàòíîãî óðàâíåíèÿ ax**2 + bx + c
///@param: adrs_c - àäðåñ òðåòüåãî êîýôôèöèåíòà êâàäðàòíîãî óðàâíåíèÿ ax**2 + bx + c

///@details: ôóíêöèÿ ïðîâåðÿåò, áûëî ëè ñ÷èòàííî ðîâíî 3 êîýôôèöèåíòà êâàäðàòíîãî óðàâíåíèÿ, \
             è âñå ëè èç ñ÷èòàííûõ ÷èñåë ïðèíàäëåæàò ê òèïó double. Â ñëó÷àå íåêîððåêòíîãî ââîäà \
             ó ïîëüçîâàòåëÿ çàïðàøèâàåòñÿ ïîâòîðíûé ââîä äàííûõ.

void InputData   (double *adrs_a, double *adrs_b, double *adrs_c);




///@brief: ôóíêöèÿ ïðîâåðÿåò ðàâíû ëè ÷èñëà

///@param: 2 ÷èñëà òèïà double

///@return: 0, åñëè ÷èñëà íå ðàâíû
///@return: 1, åñëè ÷èñëà ðàâíû

bool IsEqual  (double num1, double num2);




///@brief: ôóíêöèÿ ðåøàåò êâàäðàòíîå ax**2 + bx + c  ñ çàäàííûìè êîýôôèöèåíòàìè

///@param: a - ïåðâûé êîýôôèöèåíò êâàäðàòíîãî óðàâíåíèÿ
///@param: b - âòîðîé êîýôôèöèåíò êâàäðàòíîãî óðàâíåíèÿ
///@param: c - òðåòèé êîýôôèöèåíò êâàäðàòíîãî óðàâíåíèÿ
///@param: adrs_x1 - àäðåñ äëÿ çàïèñè ïåðâîãî êîðíÿ êâàäðàòíîãî óðàâíåíèÿ
///@param: adrs_x2 - àäðåñ äëÿ çàïèñè âòîðîãî êîðíÿ êâàäðàòíîãî óðàâíåíèÿ

///@return: NO_ROOTS, åñëè óðàâíåíèå ïðè çàäàííûõ êîýôôèöèåíòàõ íå èìååò ðåøåíèé
///@return: ONE_ROOT, åñëè óðàâíåíèå èìååò îäíî ðåøåíèå
///@return: TWO_ROOTS, åñëè óðàâíåíèå èìååò 2 ðåøåíèå
///@return: INFINITY_ROOTS, åñëè óðàâíåíèå èìååò áåñêîíå÷íîå êîëè÷åñòâî ðåøåíèé

///@details: ôóíêöèÿ îïðåäåëÿåò êîëè÷åñòâî êîðíåé óðàâíåíèÿ \
             è â çàâèñèìîñòè îò âõîäíûõ äàííûõ âîçâðàùàåò íóæíîå çíà÷åíèå

int  SolveSquare (double a, double b, double c, double *adrs_x1, double *adrs_x2);




///@brief: ôóíêöèÿ âûâîäèò îòâåò

///@param: nRoots - êîëè÷åñòâî êîðíåé êâàäðàòíîãî óðàâíåíèÿ ax**2 +bx + c
///@param: x1 - ïåðâûé êîðåíü êâàäðàòíîãî óðàâíåíèÿ
///@param: x2 - âòîðîé êîðåíü êâàäðàòíîãî óðàâíåíèÿ


///@return: NO_ROOTS, åñëè óðàâíåíèå ïðè çàäàííûõ êîýôôèöèåíòàõ íå èìååò ðåøåíèé
///@return: ONE_ROOT, åñëè óðàâíåíèå èìååò îäíî ðåøåíèå
///@return: TWO_ROOTS, åñëè óðàâíåíèå èìååò 2 ðåøåíèå
///@return: INFINITY_ROOTS, åñëè óðàâíåíèå èìååò áåñêîíå÷íîå êîëè÷åñòâî ðåøåíèé

///@details: ôóíêöèÿ âûâîäèò êîðíè êâàäðàòíîãî óðàâíåíèÿ è ñëîâåñíîå îïèñàíèå \
             èëè ïðåäóïðåæäàåò îá îøèáêå

void PrintRoots  (int nRoots, double x1, double x2);

#endif
